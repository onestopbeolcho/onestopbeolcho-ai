rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 관리자 확인
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // 작업자 확인
    function isWorker() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'worker';
    }

    // 사용자 확인
    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if isUser(userId) || isAdmin();
      allow create: if isUser(userId);
      allow update: if isUser(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    match /serviceRequests/{serviceRequestId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if isAdmin() || isWorker() || 
                   (request.auth != null && resource.data.customerId == request.auth.uid);
      allow delete: if isAdmin() || 
                   (request.auth != null && resource.data.customerId == request.auth.uid);
    }

    match /statusHistory/{historyId} {
      allow read: if true;
      allow create: if isAdmin() || isWorker();
      allow update, delete: if isAdmin();
    }
  }
} 